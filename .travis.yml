dist: xenial
sudo: false
notifications:
  email: false
language: c
compiler: gcc
cache:
  ccache: true
  directories:
    - "${HOME}/dl"
    - "${HOME}/files"
    - "${HOME}/feeds"
git:
  depth: 3
  submodules: false
addons:
  apt:
    packages:
      - subversion
      - build-essential
      - libncurses5-dev
      - zlib1g-dev
      - gettext
      - libssl-dev
      - xsltproc
      - zip
env:
  global:
    - PACKAGE=v2ray-core
    - GITHUB_USER=kuoruan
    - GITHUB_REPO=openwrt-v2ray
    - DOWNLOAD_DIR=${HOME}/files
    - CONFIG_CCACHE=y
matrix:
  include: # x86-64
    - env: SDK_URL=https://downloads.openwrt.org/snapshots/targets/x86/64/openwrt-sdk-x86-64_gcc-8.3.0_musl.Linux-x86_64.tar.xz
    - if: tag IS present # i386_pentium4
      env: SDK_URL=https://downloads.openwrt.org/snapshots/targets/x86/generic/openwrt-sdk-x86-generic_gcc-8.3.0_musl.Linux-x86_64.tar.xz
    - if: tag IS present # mips_24kc
      env: SDK_URL=https://downloads.openwrt.org/snapshots/targets/ar71xx/generic/openwrt-sdk-ar71xx-generic_gcc-7.4.0_musl.Linux-x86_64.tar.xz
    - if: tag IS present # mipsel_24kc
      env: SDK_URL=https://downloads.openwrt.org/snapshots/targets/ramips/mt7620/openwrt-sdk-ramips-mt7620_gcc-8.3.0_musl.Linux-x86_64.tar.xz
    - if: tag IS present # arm_cortex-a7_neon-vfpv4
      env: SDK_URL=https://downloads.openwrt.org/snapshots/targets/brcm2708/bcm2709/openwrt-sdk-brcm2708-bcm2709_gcc-8.3.0_musl_eabi.Linux-x86_64.tar.xz
    - if: tag IS present # aarch64_cortex-a53
      env: SDK_URL=https://downloads.openwrt.org/snapshots/targets/brcm2708/bcm2710/openwrt-sdk-brcm2708-bcm2710_gcc-8.3.0_musl.Linux-x86_64.tar.xz
    - if: tag IS present # mips_mips32
      env: SDK_URL=https://downloads.openwrt.org/snapshots/targets/brcm63xx/generic/openwrt-sdk-brcm63xx-generic_gcc-8.3.0_musl.Linux-x86_64.tar.xz
    - if: tag IS present # arm_cortex-a9
      env: SDK_URL=https://downloads.openwrt.org/snapshots/targets/bcm53xx/generic/openwrt-sdk-bcm53xx-generic_gcc-8.3.0_musl_eabi.Linux-x86_64.tar.xz
    - if: tag IS present # mipsel_mips32
      env: SDK_URL=https://downloads.openwrt.org/snapshots/targets/brcm47xx/generic/openwrt-sdk-brcm47xx-generic_gcc-8.3.0_musl.Linux-x86_64.tar.xz
    - if: tag IS present # arm_cortex-a9_vfpv3
      env: SDK_URL=https://downloads.openwrt.org/snapshots/targets/mvebu/cortexa9/openwrt-sdk-mvebu-cortexa9_gcc-8.3.0_musl_eabi.Linux-x86_64.tar.xz
    - if: tag IS present # aarch64_cortex-a72
      env: SDK_URL=https://downloads.openwrt.org/snapshots/targets/mvebu/cortexa72/openwrt-sdk-mvebu-cortexa72_gcc-8.3.0_musl.Linux-x86_64.tar.xz
    - if: tag IS present # arm_cortex-a15_neon-vfpv4
      env: SDK_URL=https://downloads.openwrt.org/snapshots/targets/ipq806x/generic/openwrt-sdk-ipq806x-generic_gcc-8.3.0_musl_eabi.Linux-x86_64.tar.xz
    - if: tag IS present # aarch64_generic
      env: SDK_URL=http://downloads.openwrt.org/snapshots/targets/layerscape/armv8_64b/openwrt-sdk-layerscape-armv8_64b_gcc-8.3.0_musl.Linux-x86_64.tar.xz
    - if: tag IS present # mips64_octeonplus
      env: SDK_URL=https://downloads.openwrt.org/snapshots/targets/octeon/generic/openwrt-sdk-octeon_gcc-8.3.0_musl.Linux-x86_64.tar.xz
    - if: tag IS presnet # arc_arc700
      env: SDK_URL=https://downloads.openwrt.org/snapshots/targets/arc770/generic/openwrt-sdk-arc770-generic_gcc-8.3.0_uClibc.Linux-x86_64.tar.xz
    - if: tag IS present # mips64_octeon
      env: SDK_URL=http://downloads.openwrt.org/releases/18.06.5/targets/octeon/generic/openwrt-sdk-18.06.5-octeon_gcc-7.3.0_musl.Linux-x86_64.tar.xz
before_install:
  - export SDK_URL_PATH="$(dirname "$SDK_URL")"
  - export SDK_NAME="$(basename "$SDK_URL")"
  - test -d "$DOWNLOAD_DIR" || mkdir -p "$DOWNLOAD_DIR"
  - cd "$DOWNLOAD_DIR"
  - |
    if ! ( wget -q -O - "${SDK_URL_PATH}/sha256sums" | \
      grep "$SDK_NAME" sha256sums > sha256sums.small 2>/dev/null ) ; then
      echo "Can not find ${SDK_NAME} file in sha256sums."
      exit 1
    fi
  - |
    if ! sha256sum -c ./sha256sums.small 2>/dev/null ; then
      wget -q -O "$SDK_NAME" "$SDK_URL"
      if ! sha256sum -c ./sha256sums.small 2>/dev/null ; then
        echo "SDK can not be verified!"
        exit 1
      fi
    fi
  - file "${DOWNLOAD_DIR}/${SDK_NAME}"
install:
  - test -d "${HOME}/dl" || mkdir -p "${HOME}/dl"
  - test -d "${HOME}/feeds" || mkdir -p "${HOME}/feeds"
  - export SDK_HOME="$(mktemp -d)"
  - tar -Jxf "${DOWNLOAD_DIR}/${SDK_NAME}" -C "$SDK_HOME" --strip=1
  - cd "$SDK_HOME"
  - test -d "dl" && rm -rf dl || true
  - test -d "feeds" && rm -rf feeds || true
  - ln -s "${HOME}/dl/" dl
  - ln -s "${HOME}/feeds" feeds
  - cat feeds.conf.default >feeds.conf
  - sed -i 's#git.openwrt.org/openwrt/openwrt#github.com/openwrt/openwrt#' feeds.conf
  - sed -i 's#git.openwrt.org/feed/packages#github.com/openwrt/packages#' feeds.conf
  - sed -i 's#git.openwrt.org/project/luci#github.com/openwrt/luci#' feeds.conf
  - sed -i 's#git.openwrt.org/feed/telephony#github.com/openwrt/telephony#' feeds.conf
  - ln -s "$TRAVIS_BUILD_DIR" "package/${PACKAGE}"
before_script:
  - cd "$SDK_HOME"
  - ./scripts/feeds update -a
  - |
    test -d ./feeds/packages/net/v2ray-core && \
      rm -rf ./feeds/packages/net/v2ray-core || true
  - |
    test -d ./feeds/packages/lang/golang && \
      rm -rf ./feeds/packages/lang/golang || true
  - |
    curl https://codeload.github.com/openwrt/packages/tar.gz/master | \
      tar -xz -C ./feeds/packages/lang --strip=2 packages-master/lang/golang
  - ./scripts/feeds install -a
  - make defconfig
script:
  - cd "$SDK_HOME"
  - make package/${PACKAGE}/compile V=s
after_success:
  - find "${SDK_HOME}/bin/" -type f -exec ls -lh {} \;
before_deploy:
  - find "${SDK_HOME}/bin/" -name v2*.ipk -exec cp {} "$TRAVIS_BUILD_DIR" \;
  - ls -hl "$TRAVIS_BUILD_DIR" | grep .*\.ipk
deploy:
  provider: releases
  file_glob: true
  file: "${TRAVIS_BUILD_DIR}/*.ipk"
  skip_cleanup: true
  on:
    tags: true
    all_branches: true
  token: $GITHUB_TOKEN
